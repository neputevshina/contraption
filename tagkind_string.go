// Code generated by "stringer -type=tagkind -trimprefix=tag"; DO NOT EDIT.

package contraption

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[tagCompound-0]
	_ = x[tagCircle-1]
	_ = x[tagRect-2]
	_ = x[tagRoundrect-3]
	_ = x[tagVoid-4]
	_ = x[tagEquation-5]
	_ = x[tagText-6]
	_ = x[tagCanvas-7]
	_ = x[tagVectorText-8]
	_ = x[tagTopDownText-9]
	_ = x[tagBottomUpText-10]
	_ = x[tagHalign - -1]
	_ = x[tagValign - -2]
	_ = x[tagFill - -3]
	_ = x[tagStroke - -4]
	_ = x[tagStrokewidth - -5]
	_ = x[tagIdentity - -6]
	_ = x[tagCond - -7]
	_ = x[tagCondfill - -8]
	_ = x[tagCondstroke - -9]
	_ = x[tagBetween - -10]
	_ = x[tagScroll - -11]
	_ = x[tagSource - -12]
	_ = x[tagSink - -13]
	_ = x[tagTransform - -101]
	_ = x[tagPretransform - -102]
	_ = x[tagScissor - -103]
	_ = x[tagVfollow - -104]
	_ = x[tagHfollow - -105]
	_ = x[tagHshrink - -106]
	_ = x[tagVshrink - -107]
	_ = x[tagLimit - -108]
}

const (
	_tagkind_name_0 = "LimitVshrinkHshrinkHfollowVfollowScissorPretransformTransform"
	_tagkind_name_1 = "SinkSourceScrollBetweenCondstrokeCondfillCondIdentityStrokewidthStrokeFillValignHalignCompoundCircleRectRoundrectVoidEquationTextCanvasVectorTextTopDownTextBottomUpText"
)

var (
	_tagkind_index_0 = [...]uint8{0, 5, 12, 19, 26, 33, 40, 52, 61}
	_tagkind_index_1 = [...]uint8{0, 4, 10, 16, 23, 33, 41, 45, 53, 64, 70, 74, 80, 86, 94, 100, 104, 113, 117, 125, 129, 135, 145, 156, 168}
)

func (i tagkind) String() string {
	switch {
	case -108 <= i && i <= -101:
		i -= -108
		return _tagkind_name_0[_tagkind_index_0[i]:_tagkind_index_0[i+1]]
	case -13 <= i && i <= 10:
		i -= -13
		return _tagkind_name_1[_tagkind_index_1[i]:_tagkind_index_1[i+1]]
	default:
		return "tagkind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
